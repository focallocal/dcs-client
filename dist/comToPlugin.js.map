{"version":3,"file":"comToPlugin.js","sources":["../node_modules/bellhop-iframe/node_modules/@babel/runtime/helpers/typeof.js","../node_modules/bellhop-iframe/node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/bellhop-iframe/node_modules/@babel/runtime/helpers/createClass.js","../node_modules/bellhop-iframe/src/BellhopEventDispatcher.js","../node_modules/bellhop-iframe/node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js","../node_modules/bellhop-iframe/node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/bellhop-iframe/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/bellhop-iframe/node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/bellhop-iframe/node_modules/@babel/runtime/helpers/superPropBase.js","../node_modules/bellhop-iframe/node_modules/@babel/runtime/helpers/get.js","../node_modules/bellhop-iframe/node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/bellhop-iframe/src/Bellhop.js","../node_modules/bellhop-iframe/node_modules/@babel/runtime/helpers/inherits.js","../src/utils.js","../src/comToPlugin.js"],"sourcesContent":["function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","/**\n * Function with a added priority type\n * @typedef {Function} PriorityFunction\n * @property {number} _priority\n */\n\n/**\n * Generic event dispatcher\n * @class  BellhopEventDispatcher\n */\nexport class BellhopEventDispatcher {\n  /**\n   *  The collection of event listeners\n   *  @property {Object} _listeners\n   *  @private\n   */\n  constructor() {\n    this._listeners = {};\n  }\n\n  /**\n   *  Add an event listener to the listen to an event from either the parent or iframe\n   *  @method on\n   *  @param {String} name The name of the event to listen\n   *  @param {PriorityFunction} callback The handler when an event is triggered\n   *  @param {number} [priority=0] The priority of the event listener. Higher numbers are handled first.\n   */\n  on(name, callback, priority = 0) {\n    if (!this._listeners[name]) {\n      this._listeners[name] = [];\n    }\n    callback._priority = parseInt(priority) || 0;\n\n    // If callback is already set to this event\n    if (-1 !== this._listeners[name].indexOf(callback)) {\n      return;\n    }\n\n    this._listeners[name].push(callback);\n\n    if (this._listeners[name].length > 1) {\n      this._listeners[name].sort(this.listenerSorter);\n    }\n  }\n\n  /**\n   * @private\n   * @param {PriorityFunction} a\n   * @param {PriorityFunction} b\n   * @returns {number};\n   *  Sorts listeners added by .on() by priority\n   */\n  listenerSorter(a, b) {\n    return a._priority - b._priority;\n  }\n\n  /**\n   *  Remove an event listener\n   *  @method off\n   *  @param {String} name The name of event to listen for. If undefined, remove all listeners.\n   *  @param {Function} [callback] The optional handler when an event is triggered, if no callback\n   *         is set then all listeners by type are removed\n   */\n  off(name, callback) {\n    if (this._listeners[name] === undefined) {\n      return;\n    }\n\n    if (callback === undefined) {\n      delete this._listeners[name];\n      return;\n    }\n\n    const index = this._listeners[name].indexOf(callback);\n\n    -1 < index ? this._listeners[name].splice(index, 1) : undefined;\n  }\n\n  /**\n   *  Trigger any event handlers for an event type\n   *  @method trigger\n   *  @param {object | String} event The event to send\n   *  @param {object} [data = {}] optional data to send to other areas in the app that are listening for this event\n   */\n  trigger(event, data = {}) {\n    if (typeof event == 'string') {\n      event = {\n        type: event,\n        data: 'object' === typeof data && null !== data ? data : {}\n      };\n    }\n\n    if ('undefined' !== typeof this._listeners[event.type]) {\n      for (let i = this._listeners[event.type].length - 1; i >= 0; i--) {\n        this._listeners[event.type][i](event);\n      }\n    }\n  }\n\n  /**\n   * Reset the listeners object\n   * @method  destroy\n   */\n  destroy() {\n    this._listeners = {};\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;","var superPropBase = require(\"./superPropBase\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","import { BellhopEventDispatcher } from './BellhopEventDispatcher.js';\n\n/**\n *  Abstract the communication layer between the iframe\n *  and the parent DOM\n *  @class Bellhop\n *  @extends BellhopEventDispatcher\n */\nexport class Bellhop extends BellhopEventDispatcher {\n  /**\n   * Creates an instance of Bellhop.\n   * @memberof Bellhop\n   * @param { string | number } id the id of the Bellhop instance\n   */\n  constructor(id = (Math.random() * 100) | 0) {\n    super();\n\n    /**\n     *  The instance ID for bellhop\n     *  @property {string} id\n     */\n    this.id = `BELLHOP:${id}`;\n    /**\n     *  If we are connected to another instance of the bellhop\n     *  @property {Boolean} connected\n     *  @readOnly\n     *  @default false\n     *  @private\n     */\n    this.connected = false;\n\n    /**\n     *  If this instance represents an iframe instance\n     *  @property {Boolean} isChild\n     *  @private\n     *  @default true\n     */\n    this.isChild = true;\n\n    /**\n     *  If we are current trying to connec\n     *  @property {Boolean} connecting\n     *  @default false\n     *  @private\n     */\n    this.connecting = false;\n\n    /**\n     *  If using cross-domain, the domain to post to\n     *  @property {string} origin\n     *  @private\n     *  @default \"*\"\n     */\n    this.origin = '*';\n\n    /**\n     *  Save any sends to wait until after we're done\n     *  @property {Array} _sendLater\n     *  @private\n     */\n    this._sendLater = [];\n\n    /**\n     * The iframe element\n     * @property {HTMLIFrameElement} iframe\n     * @private\n     * @readOnly\n     */\n    this.iframe = null;\n\n    /**\n     * The bound receive function\n     * @property {Function} receive\n     * @private\n     */\n    this.receive = this.receive.bind(this);\n  }\n\n  /**\n   *  The connection has been established successfully\n   *  @event connected\n   */\n\n  /**\n   *  Connection could not be established\n   *  @event failed\n   */\n\n  /**\n   *  Handle messages in the window\n   *  @method receive\n   *  @param { MessageEvent } message the post message received from another bellhop instance\n   *  @private\n   */\n  receive(message) {\n    // Ignore messages that don't originate from the target\n    // we're connected to\n    if (this.target !== message.source) {\n      return;\n    }\n\n    // If this is not the initial connection message\n    if (message.data !== 'connected') {\n      let data = message.data;\n      // Check to see if the data was sent as a stringified json\n      if ('string' === typeof data) {\n        try {\n          data = JSON.parse(data);\n        } catch (err) {\n          console.error('Bellhop error: ', err);\n        }\n      }\n      if (this.connected && 'object' === typeof data && data.type) {\n        this.trigger(data);\n      }\n      return;\n    }\n    // Else setup the connection\n    this.onConnectionReceived(message.data);\n  }\n  /**\n   * @memberof Bellhop\n   * @param {object} message the message received from the other bellhop instance\n   * @private\n   */\n  onConnectionReceived(message) {\n    this.connecting = false;\n    this.connected = true;\n\n    // Be polite and respond to the child that we're ready\n    if (!this.isChild) {\n      this.target.postMessage(message, this.origin);\n    }\n\n    // If we have any sends waiting to send\n    // we are now connected and it should be okay\n    for (let i = 0; i < this._sendLater.length; i++) {\n      const { type, data } = this._sendLater[i];\n      this.send(type, data);\n    }\n    this._sendLater.length = 0;\n\n    // If there is a connection event assigned call it\n    this.trigger('connected');\n  }\n\n  /**\n   *  Setup the connection\n   *  @method connect\n   *  @param {HTMLIFrameElement} iframe The iframe to communicate with. If no value is set, the assumption\n   *         is that we're the child trying to communcate with our window.parent\n   *  @param {String} [origin=\"*\"] The domain to communicate with if different from the current.\n   *  @return {Bellhop} Return instance of current object\n   */\n  connect(iframe, origin = '*') {\n    // Ignore if we're already trying to connect\n    if (this.connecting) {\n      return;\n    }\n\n    // Disconnect from any existing connection\n    this.disconnect();\n\n    // We are trying to connect\n    this.connecting = true;\n\n    // The iframe if we're the parent\n    if (iframe instanceof HTMLIFrameElement) {\n      this.iframe = iframe;\n    }\n\n    // The instance of bellhop is inside the iframe\n    this.isChild = iframe === undefined;\n\n    this.supported = true;\n    if (this.isChild) {\n      // for child pages, the window passed must be a different window\n      this.supported = window != iframe;\n    }\n\n    this.origin = origin;\n\n    window.addEventListener('message', this.receive);\n\n    if (this.isChild) {\n      // No parent, can't connect\n      if (window === this.target) {\n        this.trigger('failed');\n      } else {\n        // If connect is called after the window is ready\n        // we can go ahead and send the connect message\n        this.target.postMessage('connected', this.origin);\n      }\n    }\n  }\n\n  /**\n   *  Disconnect if there are any open connections\n   *  @method disconnect\n   */\n  disconnect() {\n    this.connected = false;\n    this.connecting = false;\n    this.origin = null;\n    this.iframe = null;\n    this.isChild = true;\n    this._sendLater.length = 0;\n\n    window.removeEventListener('message', this.receive);\n  }\n\n  /**\n   *  Send an event to the connected instance\n   *  @method send\n   *  @param {string} type name/type of the event\n   *  @param {*} [data = {}] Additional data to send along with event\n   */\n  send(type, data = {}) {\n    if (typeof type !== 'string') {\n      throw 'The event type must be a string';\n    }\n\n    const message = {\n      type,\n      data\n    };\n\n    if (this.connecting) {\n      this._sendLater.push(message);\n    } else {\n      this.target.postMessage(JSON.stringify(message), this.origin);\n    }\n  }\n\n  /**\n   *  A convenience method for sending and the listening to create\n   *  a singular link to fetching data. This is the same calling send\n   *  and then getting a response right away with the same event.\n   *  @method fetch\n   *  @param {String} event The name of the event\n   *  @param {Function} callback The callback to call after, takes event object as one argument\n   *  @param {Object} [data = {}] Optional data to pass along\n   *  @param {Boolean} [runOnce=false] If we only want to fetch once and then remove the listener\n   */\n  fetch(event, callback, data = {}, runOnce = false) {\n    if (!this.connecting && !this.connected) {\n      throw 'No connection, please call connect() first';\n    }\n\n    const internalCallback = e => {\n      if (runOnce) {\n        this.off(e.type, internalCallback);\n      }\n\n      callback(e);\n    };\n\n    this.on(event, internalCallback);\n    this.send(event, data);\n  }\n\n  /**\n   *  A convience method for listening to an event and then responding with some data\n   *  right away. Automatically removes the listener\n   *  @method respond \n   *  @param {String} event The name of the event\n   *  @param {Object | function | Promise | string} [data = {}] The object to pass back.\n   *  \tMay also be a function; the return value will be sent as data in this case.\n   *  @param {Boolean} [runOnce=false] If we only want to respond once and then remove the listener\n   *  \n   */\n  respond(event, data = {}, runOnce = false) {\n    const bellhop = this; //'this' for use inside async function\n    /** \n     * @ignore \n     */ \n    const internalCallback = async function(event){\n      if (runOnce) {\n        bellhop.off(event, internalCallback);\n      }\n      if(typeof data === 'function'){\n        data = data(); \n      }\n      const newData = await data; \n      bellhop.send(event.type, newData);\n    };\n    this.on(event, internalCallback);\n  }\n\n  /**\n   *  Destroy and don't user after this\n   *  @method destroy\n   */\n  destroy() {\n    super.destroy();\n    this.disconnect();\n    this._sendLater.length = 0;\n  }\n\n  /**\n   *\n   * Returns the correct parent element for Bellhop's context\n   * @readonly\n   * @memberof Bellhop\n   */\n  get target() {\n    return this.isChild ? window.parent : this.iframe.contentWindow;\n  }\n}\n","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","//------------------------------------------------------------------------------\r\n\r\nexport const u = {}\r\n\r\n//------------------------------------------------------------------------------\r\n\r\n// Return true if we are in an iframe\r\n// https://stackoverflow.com/a/326076/3567351\r\nu.inIFrame = () => {\r\n  try {\r\n    return window.self !== window.top\r\n  } catch (e) {\r\n    return true\r\n  }\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n\r\nu.dom = {\r\n  // Resolve when DOM is ready\r\n  onDOMReady() {\r\n    return new Promise(resolve => {\r\n      if (document.readyState !== 'loading') {\r\n        resolve()\r\n      } else {\r\n        document.addEventListener('DOMContentLoaded', resolve)\r\n      }\r\n    })\r\n  },\r\n\r\n  // https://github.com/imagitama/nodelist-foreach-polyfill/blob/master/index.js\r\n  forEach(nodeList, callback, scope) {\r\n    // Duplicate the list, so that we can iterate over a dynamic node list\r\n    // returned by getElementsByClassName() and the likes. If we don't, the\r\n    // following won't work, as we change the list dynamically while we iterate\r\n    // over it:\r\n    // u.dom.forEach(document.getElementsByClassName('toto'), node => node.classList.remove('toto'))\r\n    const list = [...nodeList]\r\n    for (let i = 0; i < list.length; i++) {\r\n      callback.call(scope || window, list[i], i)\r\n    }\r\n  },\r\n\r\n  wrap(el, wrapper) {\r\n    el.parentNode.insertBefore(wrapper, el)\r\n    wrapper.appendChild(el)\r\n    return wrapper\r\n  },\r\n\r\n  wrapAll(elArray, wrapper) {\r\n    if (elArray && elArray.length) {\r\n      // Duplicate the array in case it is a DOM nodeList than would be modified\r\n      // while we move elements\r\n      const copyArray = Array.prototype.slice.call(elArray)\r\n      copyArray[0].parentNode.insertBefore(wrapper, copyArray[0])\r\n      copyArray.forEach(el => wrapper.appendChild(el))\r\n    }\r\n    return wrapper\r\n  },\r\n\r\n  createElement(htmlString) {\r\n    const div = document.createElement('div')\r\n    div.innerHTML = htmlString.trim()\r\n    return div.firstChild\r\n  }\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n","import * as comTypes from './com-types'\r\nimport { Bellhop } from 'bellhop-iframe'\r\nimport { u } from './utils'\r\n\r\nexport const inIFrame = u.inIFrame\r\n\r\nclass ComToPlugin {\r\n\t//----------------------------------------------------------------------------\r\n\r\n\tconstructor() {\r\n\t\tthis._bellhop = new Bellhop()\r\n\t\tthis._timer = null\r\n\t\tthis._onConnected = null\r\n\r\n\t\t// This is called avery time the iframe reloads\r\n\t\tthis._bellhop.on('connected', () => {\r\n\t\t\tif (this._timer) {\r\n\t\t\t\tclearTimeout(this._timer)\r\n\t\t\t\tthis._timer = null\r\n\t\t\t}\r\n\t\t\tthis._onConnected && this._onConnected()\r\n\t\t})\r\n\t}\r\n\r\n\t//----------------------------------------------------------------------------\r\n\r\n\t/**\r\n   * @param {Object} arg\r\n   * @param {string} arg.discourseOrigin\r\n   * @param {OnConnectedCallback} arg.onConnected\r\n   * @param {number} arg.timeout\r\n   * @param {OnTimeoutCallback} arg.onTimeout\r\n   */\r\n\tconnect({ discourseOrigin, onConnected, timeout, onTimeout }) {\r\n\t\tif (!u.inIFrame()) {\r\n\t\t\tthrow new Error('comToPlugin must be used in an iframe')\r\n\t\t}\r\n\t\tthis.disconnect()\r\n\t\tthis._onConnected = onConnected\r\n\t\tthis._timer = timeout\r\n\t\t\t? setTimeout(() => {\r\n\t\t\t\t\tonTimeout && onTimeout()\r\n\t\t\t\t}, timeout)\r\n\t\t\t: null\r\n\t\tthis._bellhop.connect(undefined, discourseOrigin)\r\n\t}\r\n\r\n\tdisconnect() {\r\n\t\tif (this._timer) {\r\n\t\t\tclearTimeout(this._timer)\r\n\t\t\tthis._timer = null\r\n\t\t}\r\n\t\tthis._bellhop.disconnect()\r\n\t}\r\n\r\n\tisConnected() {\r\n\t\treturn this._bellhop.connected\r\n\t}\r\n\r\n\t//----------------------------------------------------------------------------\r\n\r\n\t/**\r\n   * @callback OnDiscourseRoutePushedCallback\r\n   * @param {RoutePushedParams}\r\n   */\r\n\t/**\r\n   *  @param {OnDiscourseRoutePushedCallback} cb\r\n   */\r\n\tonDiscourseRoutePushed(cb) {\r\n\t\tthis._bellhop.on('m2', e => cb(e.data))\r\n\t}\r\n\r\n\t/**\r\n   * @callback OnCountsChangedCallback\r\n   * @param {Counts}\r\n   */\r\n\t/**\r\n   *  @param {OnCountsChangedCallback} cb\r\n   */\r\n\tonCountsChanged(cb) {\r\n\t\tthis._bellhop.on('m3', e => cb(e.data))\r\n\t}\r\n\r\n\t//----------------------------------------------------------------------------\r\n\r\n\t/**\r\n   * @param {SetRouteParams}\r\n   */\r\n\tpostSetDiscourseRoute({ route, mode, clientContext }) {\r\n\t\tthis._bellhop.send('m4', arguments[0])\r\n\t}\r\n\r\n\t/**\r\n   * @param {RouteProps} props\r\n   */\r\n\tpostSetRouteProps({ category, discourseTitle, error }) {\r\n\t\tthis._bellhop.send('m6', arguments[0])\r\n\t}\r\n\r\n\t/**\r\n   * @param {[Redirect]} redirects\r\n   */\r\n\tpostSetRedirects(redirects) {\r\n\t\tthis._bellhop.send('m7', redirects)\r\n\t}\r\n\r\n\t/**\r\n   * @param {CreateTagsParams}\r\n   */\r\n\tpostCreateDcsTags({ pageName, triggerIds, notificationLevel }) {\r\n\t\tthis._bellhop.send('m8', arguments[0])\r\n\t}\r\n\r\n\t/**\r\n   * @param {CreateTopicParams}\r\n   */\r\n\tpostCreateTopic({\r\n\t\ttitle,\r\n\t\tbody,\r\n\t\tcategory,\r\n\t\tpageName,\r\n\t\ttriggerId,\r\n\t\ttagNotificationLevel\r\n\t}) {\r\n\t\tthis._bellhop.send('m9', arguments[0])\r\n\t}\r\n\r\n\t//----------------------------------------------------------------------------\r\n}\r\n\r\nexport const comToPlugin = new ComToPlugin()\r\n\r\n//==============================================================================\r\n// Better scrolling in iframe\r\n//==============================================================================\r\n\r\n/*\r\nIn an iframe, when user scrolls past the top/bottom of the page with the mouse \r\nwheel, the parent window scrolls instead. This isn't good in Discourse, where\r\nthe iframe is full height on the right.\r\nSo what we need to do os to intercept the wheel event and cancel it before it \r\nis forwarded to the parent window.\r\nNotice that the \"scroll\" event fires *after* scrolling has been done, so it is \r\nuseless in our case\r\n*/\r\n\r\nfunction handleScrollEvent(e, scrollDirection) {\r\n\tif (scrollDirection === 'UP') {\r\n\t\tif (window.scrollY === 0) {\r\n\t\t\te.preventDefault()\r\n\t\t}\r\n\t} else if (scrollDirection === 'DOWN') {\r\n\t\t// Compute the maximum scroll Y value\r\n\t\tconst scrollLimitY =\r\n\t\t\tMath.max(\r\n\t\t\t\tdocument.body.scrollHeight,\r\n\t\t\t\tdocument.body.offsetHeight,\r\n\t\t\t\tdocument.documentElement.clientHeight,\r\n\t\t\t\tdocument.documentElement.scrollHeight,\r\n\t\t\t\tdocument.documentElement.offsetHeight\r\n\t\t\t) - window.innerHeight\r\n\r\n\t\t// However, for an unknown reason, in Firefox and Chrome, window.scrollY\r\n\t\t// never reaches the maximum value but is stuck to 544.567969 when\r\n\t\t// scrollLimitY is 545\r\n\t\tif (window.scrollY > scrollLimitY - 1) {\r\n\t\t\te.preventDefault()\r\n\t\t}\r\n\t}\r\n}\r\n\r\nwindow.addEventListener(\r\n\t'wheel',\r\n\te => {\r\n\t\tif (e.deltaY < 0) {\r\n\t\t\thandleScrollEvent(e, 'UP')\r\n\t\t} else if (e.deltaY > 0) {\r\n\t\t\thandleScrollEvent(e, 'DOWN')\r\n\t\t}\r\n\t},\r\n\t{ passive: false } // Passive is true by default on all scroll-related events under Chrome and Firefox\r\n)\r\n\r\ndocument.addEventListener('keydown', e => {\r\n\tif (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\r\n\t\treturn\r\n\t}\r\n\tif (e.code === 'ArrowUp' || e.code === 'PageUp') {\r\n\t\thandleScrollEvent(e, 'UP')\r\n\t}\r\n\tif (e.code === 'ArrowDown' || e.code === 'PageDown') {\r\n\t\thandleScrollEvent(e, 'DOWN')\r\n\t}\r\n})\r\n\r\n//==============================================================================\r\n"],"names":["_typeof2","obj","Symbol","iterator","constructor","prototype","_typeof","module","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","BellhopEventDispatcher","_listeners","name","callback","priority","this","_priority","parseInt","indexOf","push","sort","listenerSorter","a","b","index","splice","event","data","type","runtime","exports","undefined","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","GenStateSuspendedYield","value","fn","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","error","return","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","ReferenceError","assertThisInitialized","_getPrototypeOf","o","property","_get","receiver","Reflect","get","base","superPropBase","desc","getOwnPropertyDescriptor","_setPrototypeOf","p","Bellhop","id","Math","random","connected","isChild","connecting","origin","_sendLater","iframe","receive","_this","bind","subClass","superClass","message","source","onConnectionReceived","JSON","parse","console","trigger","postMessage","send","disconnect","HTMLIFrameElement","supported","window","addEventListener","removeEventListener","stringify","runOnce","on","internalCallback","e","_this2","off","bellhop","newData","parent","contentWindow","u","top","dom","onDOMReady","document","readyState","[object Object]","nodeList","scope","list","el","wrapper","parentNode","insertBefore","appendChild","elArray","copyArray","Array","htmlString","div","createElement","innerHTML","trim","firstChild","inIFrame","comToPlugin","_bellhop","_timer","_onConnected","clearTimeout","discourseOrigin","onConnected","timeout","onTimeout","setTimeout","connect","cb","route","mode","clientContext","arguments","category","discourseTitle","redirects","pageName","triggerIds","notificationLevel","title","body","triggerId","tagNotificationLevel","handleScrollEvent","scrollDirection","scrollY","preventDefault","scrollLimitY","max","scrollHeight","offsetHeight","documentElement","clientHeight","innerHeight","deltaY","passive","shiftKey","altKey","ctrlKey","metaKey","code"],"mappings":"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"}